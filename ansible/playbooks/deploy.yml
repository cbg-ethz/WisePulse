---
- name: Deploy Kubernetes configuration to loculus cluster
  hosts: localhost
  gather_facts: true
  vars:
    temp_dir: "/tmp/loculus-deployment-{{ ansible_date_time.epoch }}"
    
  tasks:
    - name: Ensure temp directory exists
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0750'

    # TODO: Add nginx configuration automation for static file serving in future
    # This should include adding location /static/ block to nginx config

    - name: Ensure static images directory exists
      file:
        path: /var/www/html/static/images
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      become: yes

    - name: Copy COVID virus image for static serving
      copy:
        src: ../files/images/covid-virus.png
        dest: /var/www/html/static/images/covid-virus.png
        owner: www-data
        group: www-data
        mode: '0644'
      become: yes

    - name: Copy W-ASAP logo for static serving
      copy:
        src: ../files/images/wasap-logo.png
        dest: /var/www/html/static/images/wasap-logo.png
        owner: www-data
        group: www-data
        mode: '0644'
      become: yes

    - name: Generate values file from template
      template:
        src: ../templates/values.yaml.j2
        dest: "{{ temp_dir }}/values.yaml"
        mode: '0640'

    - name: Verify kubectl context is available
      shell: kubectl config get-contexts {{ kubectl_context }}
      register: kubectl_context_check
      failed_when: kubectl_context_check.rc != 0

    - name: Apply Helm chart with values to loculus cluster
      shell: |
        kubectl config use-context {{ kubectl_context }}
        helm upgrade --install my-loculus {{ helm_chart_path }} -f {{ temp_dir }}/values.yaml
      register: helm_output

    - name: Display Helm output
      debug:
        var: helm_output.stdout_lines

    - name: Clean up temporary files
      file:
        path: "{{ temp_dir }}"
        state: absent
      when: cleanup_temp_files | default(true)