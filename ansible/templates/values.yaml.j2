name: '{{ name }}'
host: '{{ host }}'
environment: '{{ loculus_environment }}' # Do not change this: this setup uses a "local" environment as the public traffic is proxied through nginx.

runDevelopmentMainDatabase: {{ runDevelopmentMainDatabase | lower }}
runDevelopmentKeycloakDatabase: {{ runDevelopmentKeycloakDatabase | lower }}
runDevelopmentS3: {{ runDevelopmentS3 | lower }}

welcomeMessageHTML: '{{ welcomeMessageHTML | default("") }}'

public:
  backendUrl: '{{ public.backendUrl }}'
  lapisUrlTemplate: '{{ public.lapisUrlTemplate }}'
  keycloakUrl: '{{ public.keycloakUrl }}'

auth:
  verifyEmail: {{ auth.verifyEmail | lower }}
  resetPasswordAllowed: {{ auth.resetPasswordAllowed | lower }}
  registrationAllowed: {{ auth.registrationAllowed | lower }}

seqSets:
  enabled: {{ seqSets.enabled | lower }}

s3:
  enabled: {{ s3.enabled | lower }}
  bucket:
    region: {{ s3.bucket.region }}
    endpoint: {{ s3.bucket.endpoint }}
    bucket: {{ s3.bucket.bucket }}

secrets:
  keycloak-admin:
    type: {{ secrets['keycloak-admin'].type }}
    data:
      initialAdminPassword: '{{ secrets['keycloak-admin'].data.initialAdminPassword }}'
  database:
    type: {{ secrets.database.type }}
    data:
      url: '{{ secrets.database.data.url }}'
      username: '{{ secrets.database.data.username }}'
      password: '{{ secrets.database.data.password }}'
  keycloak-database:
    type: {{ secrets['keycloak-database'].type }}
    data:
      addr: '{{ secrets['keycloak-database'].data.addr }}'
      port: '{{ secrets['keycloak-database'].data.port }}'
      database: '{{ secrets['keycloak-database'].data.database }}'
      username: '{{ secrets['keycloak-database'].data.username }}'
      password: '{{ secrets['keycloak-database'].data.password }}'
  s3-bucket:
    type: {{ secrets['s3-bucket'].type }}
    clusterWide: '{{ secrets['s3-bucket'].clusterWide }}'
    data:
      accessKey: {{ secrets['s3-bucket'].data.accessKey }}
      secretKey: {{ secrets['s3-bucket'].data.secretKey }}
  service-accounts:
    type: {{ secrets['service-accounts'].type }}
    data:
      insdcIngestUserPassword: "{{ secrets['service-accounts'].data.insdcIngestUserPassword }}"
      preprocessingPipelinePassword: "{{ secrets['service-accounts'].data.preprocessingPipelinePassword }}"
      externalMetadataUpdaterPassword: "{{ secrets['service-accounts'].data.externalMetadataUpdaterPassword }}"
      backendUserPassword: "{{ secrets['service-accounts'].data.backendUserPassword }}"

organisms:
{% for organism_key, organism_config in organisms.items() %}
  {{ organism_key }}:
    schema:
      organismName: '{{ organism_config.schema.organismName }}'
      metadata:
{% for metadata_item in organism_config.schema.metadata %}
        - name: {{ metadata_item.name }}
          type: {{ metadata_item.type }}
{% if metadata_item.header is defined %}
          header: {{ metadata_item.header }}
{% endif %}
          displayName: {{ metadata_item.displayName }}
{% if metadata_item.definition is defined %}
          definition: "{{ metadata_item.definition }}"
{% endif %}
{% if metadata_item.generateIndex is defined %}
          generateIndex: {{ metadata_item.generateIndex | lower }}
{% endif %}
{% if metadata_item.autocomplete is defined %}
          autocomplete: {{ metadata_item.autocomplete | lower }}
{% endif %}
{% endfor %}
      website:
        tableColumns:
{% for column in organism_config.schema.website.tableColumns %}
          - {{ column }}
{% endfor %}
        defaultOrder: {{ organism_config.schema.website.defaultOrder }}
        defaultOrderBy: {{ organism_config.schema.website.defaultOrderBy }}
      submissionDataTypes:
        consensusSequences: {{ organism_config.schema.submissionDataTypes.consensusSequences | lower }}
        files:
          enabled: {{ organism_config.schema.submissionDataTypes.files.enabled | lower }}
          categories:
{% for category in organism_config.schema.submissionDataTypes.files.categories %}
            - name: {{ category.name }}
{% endfor %}
      files:
{% for file_item in organism_config.schema.files %}
        - name: {{ file_item.name }}
{% endfor %}
    preprocessing:
{% for preprocessing_item in organism_config.preprocessing %}
      - version: {{ preprocessing_item.version }}
        image: {{ preprocessing_item.image }}
        args:
{% for arg in preprocessing_item.args %}
          - "{{ arg }}"
{% endfor %}
{% endfor %}
    referenceGenomes:
      singleReference:
        nucleotideSequences: {{ organism_config.referenceGenomes.singleReference.nucleotideSequences }}
        genes: {{ organism_config.referenceGenomes.singleReference.genes }}
{% endfor %}

dataUseTerms:
  enabled: {{ dataUseTerms.enabled | lower }}
disableIngest: {{ disableIngest | lower }}
disableEnaSubmission: {{ disableEnaSubmission | lower }}
accessionPrefix: "{{ accessionPrefix }}"